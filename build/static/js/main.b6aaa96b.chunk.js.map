{"version":3,"sources":["components/todoitem.js","components/todolist.js","components/addtodoitem.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","taskId","completeItem","deleteItem","react_default","a","createElement","es","title","className","complete","type","disabled","onClick","handleComplete","bind","handleDelete","task","Component","Todolist","_this","taskList","data","map","listItem","todoitem","id","key","Addtodoitem","state","item","inputValue","addNewItem","alert","e","setState","target","value","Row","Grid","Col","justify","span","placeholder","style","width","onChange","handleChange","App","newItem","length","concat","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","taskID","filter","addtodoitem","handleAddTodoItem","todolist","handleCompleteItem","handleDeleteItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6aaa96b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Panel, Button } from '@hi-ui/hiui' //引入所需组件\nimport \"../App.css\"\n\n\nclass Todoitem extends Component {\n    constructor(props) {\n        super(props)\n    \n    }\n    componentWillMount() {\n        \n    }\n    handleComplete() {\n        console.log('点击完成按钮'+this.props.taskId)\n        // this.setState({\n        //     completeButton: true\n        // })\n        this.props.completeItem(this.props.taskId)\n        \n    }\n    handleDelete(){\n        this.props.deleteItem(this.props.taskId)\n    }\n    render() {\n        return (\n            <li>\n                <Panel\n                    title={\n                        <div className={'itemButton'} complete={this.props.complete}>\n                            <Button type=\"success\"\n                                disabled={this.props.complete}\n                                onClick={this.handleComplete.bind(this)}\n                            >{this.props.complete ? '已完成' : '完成'}</Button>\n                            <Button type=\"danger\"\n                                onClick={this.handleDelete.bind(this)}\n                            >删除</Button>\n                        </div>\n                    }>\n                    {this.props.complete?<del>{this.props.task}</del>:<span>{this.props.task}</span>}\n                </Panel>\n            </li>\n\n        );\n    }\n}\n\nexport default Todoitem;","import React, { Component } from 'react';\nimport Todoitem from './todoitem';\n// import logo from './logo.svg';\n// import './App.css';\n\nclass Todolist extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    var taskList=this.props.data.map(listItem=>\n      <Todoitem taskId={listItem.id}\n                key={listItem.id}\n                task={listItem.task}\n                complete={listItem.complete}\n                completeItem={this.props.completeItem}\n                deleteItem={this.props.deleteItem}/>\n    )\n    return (\n      <ul>\n        {taskList}\n      </ul>\n    );\n  }\n}\n\nexport default Todolist;","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport { Input, Grid, Button } from '@hi-ui/hiui' //引入所需组件\n\n\nclass Addtodoitem extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    addNewItem() {\n        let item=this.state.inputValue\n\n        if(!item){\n            alert('新增任务不能为空')\n        }else{\n            console.log('新增一条todo')\n            console.log(item)\n            this.props.addNewItem(item)\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ inputValue: e.target.value });\n    }\n    render() {\n        const Row = Grid.Row\n        const Col = Grid.Col\n        return (\n            <div>\n                <Row justify='center'>\n                    <Col span={16} >\n                        <Input\n                            id=\"newItem\"\n                            type={'normal'}\n                            placeholder={'请输入一条待办'}\n                            style={{ width: '100%' }}\n                            value={this.state.inputValue}\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </Col>\n                    <Col span={4}>\n                        <Button type='line' onClick={this.addNewItem.bind(this)}>新增待办</Button>\n                    </Col>\n                </Row>\n\n            </div>\n        );\n    }\n}\n\nexport default Addtodoitem;","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import { Button } from '@hi-ui/hiui' //引入所需组件\nimport './App.css';\nimport Todolist from './components/todolist';\nimport Addtodoitem from './components/addtodoitem';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [\n        {\n          \"id\": \"1\",\n          \"task\": \"做一个TodoList Demo\",\n          \"complete\": false\n        }, {\n          \"id\": \"2\",\n          \"task\": \"学习ES6\",\n          \"complete\": false\n        }, {\n          \"id\": \"3\",\n          \"task\": \"Hello React\",\n          \"complete\": true\n        }, {\n          \"id\": \"4\",\n          \"task\": \"找工作\",\n          \"complete\": false\n        }\n      ]\n    }\n  }\n  handleAddTodoItem(task) {\n    let newItem = {\n      id: this.state.data.length+1,\n      task,\n      complete: false\n    }\n    let data = this.state.data\n    data = data.concat([newItem])\n    this.setState({data})\n  }\n  handleCompleteItem(taskId){\n    console.log(taskId)\n    let data = this.state.data;\n    for (let item of data) {\n      if (item.id === taskId) {\n        item.complete = item.complete === true ? false : true\n      }\n    }\n    this.setState({data})\n    console.log(this.state.data)\n  }\n  handleDeleteItem(taskID){\n    let data = this.state.data\n    data = data.filter(task => task.id !== taskID)\n    this.setState({data})\n    console.log(this.state.data)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ToDoList</h1>\n        <Addtodoitem addNewItem={this.handleAddTodoItem.bind(this)}/>\n        <Todolist data={this.state.data} completeItem={this.handleCompleteItem.bind(this)} deleteItem={this.handleDeleteItem.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}